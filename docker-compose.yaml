version: '3.8'
services:

  # grafana
  grafana:
    user: root
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    ports:
      - ${GRAFANA_PORT}:${GRAFANA_PORT}
    volumes:
      - ./grafana/grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning/datasources
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    networks:
      - iot_network

  # prometheus
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - iot_network

  # flask
  flask:
    build:
      context: ./server
      dockerfile: Dockerfile.flask
    container_name: flask
    devices:
      - "${DEVICE_PATH}:${DEVICE_PATH}:rwm"
    depends_on:
      - ngrok
    environment:
      - FLASK_PORT=${FLASK_PORT}
    volumes:
      - ./server:/app
      #- "${DEVICE_PATH}:${DEVICE_PATH}"
    ports:
      - ${FLASK_PORT}:${FLASK_PORT}
    networks:
      - iot_network

  # nginx
  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - flask
      - grafana
      - prometheus
    environment:
      - NGROK_DOMAIN=${NGROK_DOMAIN}
    volumes:
      - ./nginx/nginx.conf.template:/etc/nginx/conf.d/nginx.conf.template
    command: /bin/bash -c 'envsubst "\$NGROK_DOMAIN" < /etc/nginx/conf.d/nginx.conf.template > /etc/nginx/conf.d/default.conf && nginx -g "daemon off;"'
    ports:
      - 8080:80
    networks:
      - iot_network

  # ngrok
  ngrok:
    image: wernight/ngrok
    container_name: ngrok
    command: /bin/sh -c "ngrok authtoken $$NGROK_TOKEN && ngrok http -hostname=$$NGROK_DOMAIN nginx:$$NGINX_PORT"
    environment:
      - NGROK_TOKEN=${NGROK_TOKEN}
      - NGROK_DOMAIN=${NGROK_DOMAIN}
      - NGINX_PORT=${NGINX_PORT}
    ports:
      - 4040:4040
    networks:
      - iot_network

networks:
  iot_network:


volumes:
  prom_data:


